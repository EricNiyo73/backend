{"version":3,"file":"userContoller.js","names":["_userModel","_interopRequireDefault","require","_bcrypt","_jsonwebtoken","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","createUser","req","salt","bcrypt","genSalt","hashedpassword","hash","body","password","existingEmail","User","findOne","email","emailRegex","test","status","json","message","user1","newUser","save","then","result","data","user","catch","error","err","code","console","exports","login","validated","compare","token","jwt","sign","id","_id","process","env","JWT_SECRET","expiresIn","getAll","find","users","send","updateUser","userId","params","updatedUser","findByIdAndUpdate","$set","new","deleteUser","findById","findByIdAndDelete"],"sources":["../../../src/Controller/userContoller.js"],"sourcesContent":["import User from \"../model/userModel.js\";\r\nimport bcrypt from \"bcrypt\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport const createUser = async (req, res) => {\r\n    try {\r\n      const salt = await bcrypt.genSalt(10);\r\n      const hashedpassword = await bcrypt.hash(req.body.password, salt);\r\n  \r\n      const existingEmail = await User.findOne({ email: req.body.email });\r\n      // Email validation using a regular expression\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      if (!emailRegex.test(req.body.email)) {\r\n        return res.status(400).json({\r\n          message: 'Invalid email format'\r\n        });\r\n      }\r\n      if (existingEmail) {\r\n        return res.status(409).json({\r\n          message: 'Email  already exists'\r\n        });\r\n      } else {\r\n        // Create a user\r\n        const user1 = {\r\n            ...req.body,\r\n           password: hashedpassword,\r\n        }\r\n        const newUser = new User(user1);\r\n  \r\n        newUser.save()\r\n          .then(result => {\r\n            return res.status(200).json({\r\n              status: 'success',\r\n              data: {\r\n                user: newUser\r\n              }\r\n            });\r\n          })\r\n          .catch(error => {\r\n            return res.status(500).json({\r\n              error\r\n            });\r\n          });\r\n      }\r\n    } catch (err) {\r\n      if (err.code === 'Cannot set headers after they are sent to the client') {\r\n        console.error(err);\r\n        return res.status(500).json({\r\n          message: 'Unexpected error'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // ===============================LOGIN==================================\r\n\r\n  export const login = async (req, res) => {\r\n    try {\r\n      const user = await User.findOne({email: req.body.email});\r\n  \r\n      const validated = await bcrypt.compare(req.body.password, user.password);\r\n      if(!(user && validated)){\r\n        return res.status(201).json(\"Invalid Email or Username!\");\r\n      }\r\n      else {\r\n        const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, { expiresIn: '1h' });\r\n        return res.status(200).json({\r\n          message: \"Logged in successfully\",\r\n          token: token\r\n        });\r\n      }\r\n    }catch (err) {\r\n     return res.status(500).json(err);\r\n    }\r\n  };\r\n\r\n  // ===============================GETALL USERS=============================\r\n  export const getAll = (req, res) => {\r\n    User.find()\r\n    .then(users => {\r\n      return  res.send(users);\r\n    }).catch(err => {\r\n      return  res.status(500).send({\r\n            message: err.message || \"Some error occurred while retrieving user.\"\r\n        });\r\n    });\r\n  };\r\n \r\n  // ====================update==============================\r\n  export const updateUser = async (req, res) => {\r\n    if (req.body.userId === req.params.id) {\r\n      if (req.body.password) {\r\n        const salt = await bcrypt.genSalt(10);\r\n        req.body.password = await bcrypt.hash(req.body.password, salt);\r\n      }\r\n      try {\r\n        const updatedUser = await User.findByIdAndUpdate(\r\n          req.params.id,\r\n          {\r\n            $set: req.body,\r\n          },\r\n          { new: true }\r\n        );\r\n        return res.status(200).json(updatedUser);\r\n      } catch (err) {\r\n        res.status(500).json(err);\r\n      }\r\n    } else {\r\n      return res.status(401).json(\"You can update  your account only!\");\r\n    }\r\n  };\r\n\r\n  // ===================delete user================================\r\n\r\n  export  const deleteUser = async (req, res) => {\r\n    if (req.body.userId === req.params.id) {\r\n      try {\r\n        const user = await User.findById(req.params.id);\r\n        await User.findByIdAndDelete(req.params.id);\r\n         return res.status(200).json(\"User has been deleted...\");\r\n      } catch (err) {\r\n        return res.status(404).json(\"User not found!\");\r\n      }\r\n    } else {\r\n      return res.status(401).json(\"You can delete only your account!\");\r\n    }\r\n  };"],"mappings":"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"}