{"version":3,"file":"index.js","names":["_express","_interopRequireDefault","require","_mongoose","_dotenv","_bodyParser","_cors","_userRoute","_newsRoute","_eventRoute","_AdminRoute","_bookUseRoute","obj","__esModule","default","dotenv","config","PORT","process","env","app","express","use","cors","json","bodyParser","urlencoded","extended","mongoose","Promise","global","set","connect","MONGO_URL","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","exit","listen","userRoutes","newsRoute","eventRoute","admin","bookUser","get","req","res","message","_default","exports"],"sources":["../../src/index.js"],"sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport dotenv from 'dotenv';\r\nimport bodyParser from 'body-parser';\r\nimport cors from \"cors\";\r\nimport userRoutes from './Route/userRoute.js';\r\nimport newsRoute from './Route/newsRoute.js';\r\nimport eventRoute from './Route/eventRoute.js';\r\nimport admin from './Route/AdminRoute.js';\r\nimport bookUser from './Route/bookUseRoute.js'\r\ndotenv.config();\r\nconst {PORT} = process.env;\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(bodyParser.json());\r\nmongoose.Promise = global.Promise;\r\nmongoose.set(\"strictQuery\",true);\r\nmongoose.connect(process.env.MONGO_URL,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n}).then(() =>{\r\n    console.log(\"Succesfully connected to the database\");\r\n}).catch(err =>{\r\n    console.log('something went wrong',err);\r\n    process.exit();\r\n});\r\napp.listen(PORT,() =>{\r\n    console.log(`server is listening on port ${PORT}...`);\r\n})\r\n\r\n// routes\r\napp.use('/user',userRoutes);\r\napp.use('/news',newsRoute);\r\napp.use('/events',eventRoute);\r\napp.use('/admin',admin);\r\napp.use('/userbooking',bookUser);\r\n\r\napp.get('/', (req, res) => {\r\n    return res.json({message: \"Welcome  I am testing again\"});\r\n });\r\n export default app;"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,WAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,KAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,UAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,UAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,WAAA,GAAAR,sBAAA,CAAAC,OAAA;AACA,IAAAQ,WAAA,GAAAT,sBAAA,CAAAC,OAAA;AACA,IAAAS,aAAA,GAAAV,sBAAA,CAAAC,OAAA;AAA8C,SAAAD,uBAAAW,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC9CG,eAAM,CAACC,MAAM,EAAE;AACf,MAAM;EAACC;AAAI,CAAC,GAAGC,OAAO,CAACC,GAAG;AAC1B,MAAMC,GAAG,GAAG,IAAAC,gBAAO,GAAE;AACrBD,GAAG,CAACE,GAAG,CAAC,IAAAC,aAAI,GAAE,CAAC;AACfH,GAAG,CAACE,GAAG,CAACD,gBAAO,CAACG,IAAI,EAAE,CAAC;AACvBJ,GAAG,CAACE,GAAG,CAACG,mBAAU,CAACC,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAClDP,GAAG,CAACE,GAAG,CAACG,mBAAU,CAACD,IAAI,EAAE,CAAC;AAC1BI,iBAAQ,CAACC,OAAO,GAAGC,MAAM,CAACD,OAAO;AACjCD,iBAAQ,CAACG,GAAG,CAAC,aAAa,EAAC,IAAI,CAAC;AAChCH,iBAAQ,CAACI,OAAO,CAACd,OAAO,CAACC,GAAG,CAACc,SAAS,EAAC;EACnCC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACxB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAK;EACTC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;AACxD,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG;EACXH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACE,GAAG,CAAC;EACvCtB,OAAO,CAACuB,IAAI,EAAE;AAClB,CAAC,CAAC;AACFrB,GAAG,CAACsB,MAAM,CAACzB,IAAI,EAAC,MAAK;EACjBoB,OAAO,CAACC,GAAG,CAAE,+BAA8BrB,IAAK,KAAI,CAAC;AACzD,CAAC,CAAC;;AAEF;AACAG,GAAG,CAACE,GAAG,CAAC,OAAO,EAACqB,kBAAU,CAAC;AAC3BvB,GAAG,CAACE,GAAG,CAAC,OAAO,EAACsB,kBAAS,CAAC;AAC1BxB,GAAG,CAACE,GAAG,CAAC,SAAS,EAACuB,mBAAU,CAAC;AAC7BzB,GAAG,CAACE,GAAG,CAAC,QAAQ,EAACwB,mBAAK,CAAC;AACvB1B,GAAG,CAACE,GAAG,CAAC,cAAc,EAACyB,qBAAQ,CAAC;AAEhC3B,GAAG,CAAC4B,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvB,OAAOA,GAAG,CAAC1B,IAAI,CAAC;IAAC2B,OAAO,EAAE;EAA6B,CAAC,CAAC;AAC5D,CAAC,CAAC;AAAC,IAAAC,QAAA,GACYhC,GAAG;AAAAiC,OAAA,CAAAvC,OAAA,GAAAsC,QAAA"}